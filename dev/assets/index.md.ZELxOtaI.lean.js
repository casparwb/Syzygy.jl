import{_ as i,c as a,o as t,aA as e}from"./chunks/framework.DbFU1gyh.js";const n="/Syzygy.jl/dev/assets/vygucqb.BLcbD_mQ.png",g=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Syzygy","text":null,"tagline":"A fast, flexible, direct n-body integrator written in pure Julia.","image":{"src":"/logo.png","alt":"Syzygy"},"actions":[{"theme":"brand","text":"Get Started","link":"/getting_started"},{"theme":"alt","text":"View on Github","link":"https://github.com/casparwb/Syzygy.jl"},{"theme":"alt","text":"API","link":"/api"}]},"features":[{"title":"Fast and flexible","details":"Optimized for speed, and built on the DifferentialEquations.jl framework.","link":"/manual/simulating.md"},{"title":"Extensible","details":"Easily add your own potentials and acceleration functions, or your own callbacks for handling events, checks, or other forms of code injection.","link":"/manual/advanced.md"},{"title":"Feature-rich","details":"Supports high-precision numerics, post-Newtonian potentials, tidal prescriptions, stellar evolution parameters such as stellar types and stellar structure, and much more.","link":"/manual/advanced.md"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),l={name:"index.md"};function h(p,s,r,k,o,d){return t(),a("div",null,[...s[0]||(s[0]=[e("",5)])])}const y=i(l,[["render",h]]);export{g as __pageData,y as default};
